# arg 1:  the new package version
pre_install() {
	/bin/true
}

# arg 1:  the new package version
post_install() {
	
	# Check if the input group exists
	if [ ! `awk -F ":" '$1 ~ /^input$/ { print $3 }' /etc/group` ]; then
		# Check if GID 103 is available
		if [ -z `awk -F ":" '$3 ~ /^103$/ { print $3 }' /etc/group` ]; then
			groupadd -g 103 input
		else
			groupadd input # settle for any gid
		fi
		/etc/start_udev
	fi
	
	echo
	echo " >>> To get access to run gizmo: "
	echo " >>>   add yourself to the group 'input' and log out and back in"
	echo " >>>   WARNING: Only add users you trust to the 'input' group, as they"
	echo " >>>            will have access to read anything entered on any input"
	echo " >>>            device (keyboard, mouse, etc)."
	echo ' >>> '
	echo " >>> To customize gizmod's settings: "
	echo ' >>>   run the commands:'
	echo ' >>>     "[ -e ~/.gizmod ] && mv -i ~/.gizmod ~/.gizmod.old"'
	echo ' >>>     "cp -r /etc/gizmod ~/.gizmod"'
	echo ' >>>   change ~/.gizmod to your liking.'
	echo ' >>>     (See http://gizmod.wiki.sourceforge.net/Configuration)'
	echo " >>> "
	echo " >>> To load gizmod on login with Gnome: "
	echo " >>>   add an entry in System->Preferences->Sessions->Startup Programs"
	echo " >>> To load gizmod on login with KDE:"
	echo ' >>>   run "ln -s `which gizmod` ~/.kde/Autostart/gizmod"'
	
	echo
	
	/bin/true
}

# arg 1:  the new package version
# arg 2:  the old package version
pre_upgrade() {
	post_install $1
}

# arg 1:  the old package version
pre_remove() {
	/bin/true
}

# arg 1:  the old package version
post_remove() {
	
	/etc/start_udev
	
	if [ `awk -F ":" '$1 ~ /^input$/ { print $3 }' /etc/group` -eq 103 ]; then
		groupdel input
	else
		echo
		echo " >>> "
		echo " >>> The GID of the group 'input' is not set to the default (103) for this package."
		echo " >>> This means that either the GID 103 was taken at the time you first added the"
		echo " >>> package or the input group already existed before adding this package."
		echo " >>> As a result, the group will not removed be automatically."
		echo " >>> "
		echo " >>> You can check if any files are owned by the group with the command: "
		echo " >>> 'find / -group input'"
		echo " >>> If you wish to remove the group, you can do so with the command 'groupdel input'."
		echo " >>> "
		echo
	fi
	
	/bin/true
}

op=$1
shift
$op $*
